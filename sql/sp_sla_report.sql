CREATE OR ALTER   PROCEDURE [dbo].[sp_txn_analysis]
	@YEAR_START DATE,
    @START_DT DATE,
    @END_DT   DATE
AS
BEGIN
SET NOCOUNT ON;

DROP TABLE IF EXISTS TMP_TXN;
SELECT TRANSACTION_DATE
, CREATED_DATE
, UPDATED_DATE
, TRANSACTION_CODE
, TERMINAL_CODE
, FINAL_STATUS
, PAY_CASH_AMOUNT
, TRANSACTION_AMOUNT
INTO TMP_TXN
FROM [BTIPAYMENTDB].[dbo].[TBL_TRANSACTION_MASTER]
WHERE TRIM(CUSTOMER_MOBILE) <> ''
AND CONVERT(DATE,TRANSACTION_DATE) BETWEEN @START_DT AND @END_DT
;

--1B. CASH BILL INSERTED TEMP TABLE - DEDUP
DROP TABLE IF EXISTS TMP_RANKEDBILLS;
SELECT A.TERMINAL_CODE
, A.TRANSACTION_CODE
, A.DENOMINATION
, A.INSERTED_DATE
INTO TMP_RANKEDBILLS
FROM [BTIPAYMENTDB].[DBO].[TBL_TRANSACTION_INSERTED_BILL_LOGS] A
INNER JOIN TMP_TXN B
ON A.TRANSACTION_CODE = B.TRANSACTION_CODE
--WHERE CONVERT(DATE,A.INSERTED_DATE) BETWEEN @START_DT AND @END_DT
GROUP BY A.TERMINAL_CODE
, A.TRANSACTION_CODE
, A.DENOMINATION
, A.INSERTED_DATE;

--1C. CASH BILL INSERTED TEMP TABLE
DROP TABLE IF EXISTS TMP_CASHBILL1;
SELECT TRANSACTION_CODE
, TERMINAL_CODE
, MIN(INSERTED_DATE) AS START_INSERTED_DATE
, MAX(INSERTED_DATE) AS END_INSERTED_DATE
, SUM(CASE WHEN DENOMINATION = '20' THEN 1 ELSE 0 END) AS P20
, SUM(CASE WHEN DENOMINATION = '50' THEN 1 ELSE 0 END) AS P50
, SUM(CASE WHEN DENOMINATION = '100' THEN 1 ELSE 0 END) AS P100
, SUM(CASE WHEN DENOMINATION = '200' THEN 1 ELSE 0 END) AS P200
, SUM(CASE WHEN DENOMINATION = '500' THEN 1 ELSE 0 END) AS P500
, SUM(CASE WHEN DENOMINATION = '1000' THEN 1 ELSE 0 END) AS P1000
, SUM(CONVERT(DECIMAL,DENOMINATION)) AS TOTAL_DENOMINATION
INTO TMP_CASHBILL1
FROM TMP_RANKEDBILLS
GROUP BY TRANSACTION_CODE, TERMINAL_CODE;

--TIME OF DAY - TXN_COUNT
SET DATEFIRST 7;

DELETE FROM [dbo].[txn_analysis_time_of_day_txn_count] WHERE TRANSACTION_DATE BETWEEN @START_DT AND @END_DT;

INSERT INTO [dbo].[txn_analysis_time_of_day_txn_count] (
TRANSACTION_DATE,
WEEK_NUM,
FINAL_STATUS,
[0-8],
[9-12],
[13-16],
[17-20],
[21-23]
)
SELECT CAST(TRANSACTION_DATE AS DATE) AS TRANSACTION_DATE
, DATEDIFF(WK, @YEAR_START, TRANSACTION_DATE) + 1 AS WEEK_NUM
, FINAL_STATUS	
, SUM(CASE WHEN DATEPART(HH,TRANSACTION_DATE) BETWEEN 0 AND 8 THEN 1 ELSE 0 END) AS [0-8]
, SUM(CASE WHEN DATEPART(HH,TRANSACTION_DATE) BETWEEN 9 AND 12 THEN 1 ELSE 0 END) AS [9-12]
, SUM(CASE WHEN DATEPART(HH,TRANSACTION_DATE) BETWEEN 13 AND 16 THEN 1 ELSE 0 END) AS [13-16]
, SUM(CASE WHEN DATEPART(HH,TRANSACTION_DATE) BETWEEN 17 AND 20 THEN 1 ELSE 0 END) AS [17-20]
, SUM(CASE WHEN DATEPART(HH,TRANSACTION_DATE) BETWEEN 21 AND 23 THEN 1 ELSE 0 END) AS [21-23]
FROM TMP_TXN A
GROUP BY DATEDIFF(WK, @YEAR_START, TRANSACTION_DATE) + 1
, FINAL_STATUS	
, CAST(TRANSACTION_DATE AS DATE);

--SLA
DELETE FROM [dbo].[txn_analysis_sla] WHERE TRANSACTION_DATE BETWEEN @START_DT AND @END_DT;

INSERT INTO [dbo].[txn_analysis_sla] (
TRANSACTION_DATE,
WEEK_NUM,
FINAL_STATUS,
[SLA-<0],
[SLA-=0],
[SLA-1TO30],
[SLA-31TO60],
[SLA-61TO90],
[SLA-91TO120],
[SLA-121TO150],
[SLA->150]
)
SELECT CAST(TRANSACTION_DATE AS DATE) AS TRANSACTION_DATE
,DATEDIFF(WK, @YEAR_START, TRANSACTION_DATE) + 1 AS WEEK_NUM
, FINAL_STATUS	
, SUM(CASE WHEN DATEDIFF(SS,CREATED_DATE,UPDATED_DATE) < 0 THEN 1 ELSE 0 END) AS [SLA-<0]
, SUM(CASE WHEN DATEDIFF(SS,CREATED_DATE,UPDATED_DATE) = 0 THEN 1 ELSE 0 END) AS [SLA-=0]
, SUM(CASE WHEN DATEDIFF(SS,CREATED_DATE,UPDATED_DATE) BETWEEN 1 AND 30 THEN 1 ELSE 0 END) AS [SLA-1TO30]
, SUM(CASE WHEN DATEDIFF(SS,CREATED_DATE,UPDATED_DATE) BETWEEN 31 AND 60 THEN 1 ELSE 0 END) AS [SLA-31TO60]
, SUM(CASE WHEN DATEDIFF(SS,CREATED_DATE,UPDATED_DATE) BETWEEN 61 AND 90 THEN 1 ELSE 0 END) AS [SLA-61TO90]
, SUM(CASE WHEN DATEDIFF(SS,CREATED_DATE,UPDATED_DATE) BETWEEN 91 AND 120 THEN 1 ELSE 0 END) AS [SLA-91TO120]
, SUM(CASE WHEN DATEDIFF(SS,CREATED_DATE,UPDATED_DATE) BETWEEN 121 AND 150 THEN 1 ELSE 0 END) AS [SLA-121TO150]
, SUM(CASE WHEN DATEDIFF(SS,CREATED_DATE,UPDATED_DATE) > 150 THEN 1 ELSE 0 END) AS [SLA->150]
FROM TMP_TXN A
GROUP BY DATEDIFF(WK, @YEAR_START, TRANSACTION_DATE) + 1
, FINAL_STATUS
, CAST(TRANSACTION_DATE AS DATE);

--SLA WO CBI

DELETE FROM [dbo].[txn_analysis_sla_wo_cbi] WHERE TRANSACTION_DATE BETWEEN @START_DT AND @END_DT;

INSERT INTO [dbo].[txn_analysis_sla_wo_cbi] (
	TRANSACTION_DATE,
    WEEK_NUM,
    FINAL_STATUS,
    [SLA-<0],
    [SLA-=0],
    [SLA-1TO30],
    [SLA-31TO60],
    [SLA-61TO90],
	[SLA-91TO120],
	[SLA-121TO150],
	[SLA->150]
)
SELECT CAST(TRANSACTION_DATE AS DATE) AS TRANSACTION_DATE
, DATEDIFF(WK, @YEAR_START, TRANSACTION_DATE) + 1 AS WEEK_NUM
, FINAL_STATUS	
, SUM(CASE WHEN DATEDIFF(SS,CREATED_DATE,UPDATED_DATE) < 0 THEN 1 ELSE 0 END) AS [SLA-<0]
, SUM(CASE WHEN DATEDIFF(SS,CREATED_DATE,UPDATED_DATE) = 0 THEN 1 ELSE 0 END) AS [SLA-=0]
, SUM(CASE WHEN DATEDIFF(SS,CREATED_DATE,UPDATED_DATE) BETWEEN 1 AND 30 THEN 1 ELSE 0 END) AS [SLA-0TO30]
, SUM(CASE WHEN DATEDIFF(SS,CREATED_DATE,UPDATED_DATE) BETWEEN 31 AND 60 THEN 1 ELSE 0 END) AS [SLA-31TO60]
, SUM(CASE WHEN DATEDIFF(SS,CREATED_DATE,UPDATED_DATE) BETWEEN 61 AND 90 THEN 1 ELSE 0 END) AS [SLA-61TO90]
, SUM(CASE WHEN DATEDIFF(SS,CREATED_DATE,UPDATED_DATE) BETWEEN 91 AND 120 THEN 1 ELSE 0 END) AS [SLA-91TO120]
, SUM(CASE WHEN DATEDIFF(SS,CREATED_DATE,UPDATED_DATE) BETWEEN 121 AND 150 THEN 1 ELSE 0 END) AS [SLA-121TO150]
, SUM(CASE WHEN DATEDIFF(SS,CREATED_DATE,UPDATED_DATE) > 150 THEN 1 ELSE 0 END) AS [SLA->150]
FROM TMP_TXN A
LEFT JOIN TMP_CASHBILL1 B
ON A.TRANSACTION_CODE = B.TRANSACTION_CODE 
AND A.TERMINAL_CODE = B.TERMINAL_CODE
WHERE B.TOTAL_DENOMINATION IS NULL
GROUP BY DATEDIFF(WK, @YEAR_START, TRANSACTION_DATE) + 1
, FINAL_STATUS
, CAST(TRANSACTION_DATE AS DATE);


--SLA W CBI
DELETE FROM [dbo].[txn_analysis_sla_with_cbi] WHERE TRANSACTION_DATE BETWEEN @START_DT AND @END_DT;

INSERT INTO [dbo].[txn_analysis_sla_with_cbi] (
	TRANSACTION_DATE,
    WEEK_NUM,
    FINAL_STATUS,
    [SLA-<0],
    [SLA-=0],
    [SLA-1TO30],
    [SLA-31TO60],
    [SLA-61TO90],
	[SLA-91TO120],
	[SLA-121TO150],
	[SLA->150]
)
SELECT CAST(TRANSACTION_DATE AS DATE) AS TRANSACTION_DATE
, DATEDIFF(WK, @YEAR_START, TRANSACTION_DATE) + 1 AS WEEK_NUM
, FINAL_STATUS	
, SUM(CASE WHEN DATEDIFF(SS,CREATED_DATE,UPDATED_DATE) < 0 THEN 1 ELSE 0 END) AS [SLA-<0]
, SUM(CASE WHEN DATEDIFF(SS,CREATED_DATE,UPDATED_DATE) = 0 THEN 1 ELSE 0 END) AS [SLA-=0]
, SUM(CASE WHEN DATEDIFF(SS,CREATED_DATE,UPDATED_DATE) BETWEEN 1 AND 30 THEN 1 ELSE 0 END) AS [SLA-0TO30]
, SUM(CASE WHEN DATEDIFF(SS,CREATED_DATE,UPDATED_DATE) BETWEEN 31 AND 60 THEN 1 ELSE 0 END) AS [SLA-31TO60]
, SUM(CASE WHEN DATEDIFF(SS,CREATED_DATE,UPDATED_DATE) BETWEEN 61 AND 90 THEN 1 ELSE 0 END) AS [SLA-61TO90]
, SUM(CASE WHEN DATEDIFF(SS,CREATED_DATE,UPDATED_DATE) BETWEEN 91 AND 120 THEN 1 ELSE 0 END) AS [SLA-91TO120]
, SUM(CASE WHEN DATEDIFF(SS,CREATED_DATE,UPDATED_DATE) BETWEEN 121 AND 150 THEN 1 ELSE 0 END) AS [SLA-121TO150]
, SUM(CASE WHEN DATEDIFF(SS,CREATED_DATE,UPDATED_DATE) > 150 THEN 1 ELSE 0 END) AS [SLA->150]
FROM TMP_TXN A
LEFT JOIN TMP_CASHBILL1 B
ON A.TRANSACTION_CODE = B.TRANSACTION_CODE 
AND A.TERMINAL_CODE = B.TERMINAL_CODE
WHERE B.TOTAL_DENOMINATION IS NOT NULL
GROUP BY DATEDIFF(WK, @YEAR_START, TRANSACTION_DATE) + 1
, FINAL_STATUS	
, CAST(TRANSACTION_DATE AS DATE);


--TRANSACTION_AMOUNT
DELETE FROM [dbo].[txn_analysis_transaction_amount] WHERE TRANSACTION_DATE BETWEEN @START_DT AND @END_DT;

INSERT INTO [dbo].[txn_analysis_transaction_amount] (
	TRANSACTION_DATE,
    [MONTH],
    FINAL_STATUS,
	[< 500],
    [500 TO 999],
    [1000 TO 2999],
    [3000 TO 4999],
	[>= 5000]
)
SELECT CAST(TRANSACTION_DATE AS DATE) AS TRANSACTION_DATE
,MONTH(TRANSACTION_DATE) AS MONTH
, FINAL_STATUS
, SUM(CASE WHEN COALESCE(TRANSACTION_AMOUNT,0) < 500 THEN 1 ELSE 0 END) AS [< 500]
, SUM(CASE WHEN TRANSACTION_AMOUNT >= 500 AND TRANSACTION_AMOUNT < 1000 THEN 1 ELSE 0 END) AS [500 TO 999]
, SUM(CASE WHEN TRANSACTION_AMOUNT >= 1000 AND TRANSACTION_AMOUNT < 3000 THEN 1 ELSE 0 END) AS [1000 TO 2999]
, SUM(CASE WHEN TRANSACTION_AMOUNT >= 3000 AND TRANSACTION_AMOUNT < 5000 THEN 1 ELSE 0 END) AS [3000 TO 4999]
, SUM(CASE WHEN TRANSACTION_AMOUNT >= 5000 THEN 1 ELSE 0 END) AS [>= 5000]
FROM TMP_TXN A
GROUP BY MONTH(TRANSACTION_DATE)
, FINAL_STATUS
, CAST(TRANSACTION_DATE AS DATE);


--PAY_CASH_AMOUNT - TXN MASTER 

--TRANSACTION COUNT PER PAY CASH AMOUNT RANGE AND FINAL STATUS
DELETE FROM [dbo].[txn_analysis_pay_cash_amt_txn] WHERE TRANSACTION_DATE BETWEEN @START_DT AND @END_DT;

INSERT INTO [dbo].[txn_analysis_pay_cash_amt_txn] (
	TRANSACTION_DATE,
    [MONTH],
    FINAL_STATUS,
	[PAY_CASH=0],
	[PAY_CASH=1TO499],
	[PAY_CASH=500T999],
	[PAY_CASH=1000TO2999],
	[PAY_CASH=3000TO4999],
	[PAY_CASH>=5000]
)
SELECT CAST(TRANSACTION_DATE AS DATE) AS TRANSACTION_DATE
,MONTH(TRANSACTION_DATE) AS MONTH
, FINAL_STATUS
, SUM(CASE WHEN COALESCE(PAY_CASH_AMOUNT,0) = 0 THEN 1 ELSE 0 END) AS [PAY_CASH=0]
, SUM(CASE WHEN PAY_CASH_AMOUNT BETWEEN 1 AND 499 THEN 1 ELSE 0 END) AS [PAY_CASH=1TO499]
, SUM(CASE WHEN PAY_CASH_AMOUNT BETWEEN 500 AND 999 THEN 1 ELSE 0 END) AS [PAY_CASH=500T999]
, SUM(CASE WHEN PAY_CASH_AMOUNT BETWEEN 1000 AND 2999 THEN 1 ELSE 0 END) AS [PAY_CASH=1000TO2999]
, SUM(CASE WHEN PAY_CASH_AMOUNT BETWEEN 3000 AND 4999 THEN 1 ELSE 0 END) AS [PAY_CASH=3000TO4999]
, SUM(CASE WHEN PAY_CASH_AMOUNT >= 5000 THEN 1 ELSE 0 END) AS [PAY_CASH>=5000]
FROM TMP_TXN A
GROUP BY MONTH(TRANSACTION_DATE)
, FINAL_STATUS
, CAST(TRANSACTION_DATE AS DATE);

--VOLUME PER PAY CASH AMOUNT RANGE AND FINAL STATUS
DELETE FROM [dbo].[txn_analysis_pay_cash_amt_vol] WHERE TRANSACTION_DATE BETWEEN @START_DT AND @END_DT;

INSERT INTO [dbo].[txn_analysis_pay_cash_amt_vol] (
	TRANSACTION_DATE,
    [MONTH],
    FINAL_STATUS,
	[PAY_CASH=0],
	[PAY_CASH=1TO499],
	[PAY_CASH=500T999],
	[PAY_CASH=1000TO2999],
	[PAY_CASH=3000TO4999],
	[PAY_CASH>=5000]
)
SELECT CAST(TRANSACTION_DATE AS DATE) AS TRANSACTION_DATE
,MONTH(TRANSACTION_DATE) AS MONTH
, FINAL_STATUS
, SUM(CASE WHEN COALESCE(PAY_CASH_AMOUNT,0) = 0 THEN PAY_CASH_AMOUNT ELSE 0 END) AS [PAY_CASH=0]
, SUM(CASE WHEN PAY_CASH_AMOUNT BETWEEN 1 AND 499 THEN PAY_CASH_AMOUNT ELSE 0 END) AS [PAY_CASH=1TO499]
, SUM(CASE WHEN PAY_CASH_AMOUNT BETWEEN 500 AND 999 THEN PAY_CASH_AMOUNT ELSE 0 END) AS [PAY_CASH=500T999]
, SUM(CASE WHEN PAY_CASH_AMOUNT BETWEEN 1000 AND 2999 THEN PAY_CASH_AMOUNT ELSE 0 END) AS [PAY_CASH=1000TO2999]
, SUM(CASE WHEN PAY_CASH_AMOUNT BETWEEN 3000 AND 4999 THEN PAY_CASH_AMOUNT ELSE 0 END) AS [PAY_CASH=3000TO4999]
, SUM(CASE WHEN PAY_CASH_AMOUNT >= 5000 THEN PAY_CASH_AMOUNT ELSE 0 END) AS [PAY_CASH>=5000]
FROM TMP_TXN A
GROUP BY MONTH(TRANSACTION_DATE)
, FINAL_STATUS
, CAST(TRANSACTION_DATE AS DATE);

--TOTAL_DENOMINATION - CBI
--TRANSACTION COUNT PER TOTAL DENOM RANGE AND FINAL STATUS
DELETE FROM [dbo].[txn_analysis_total_denom_cbi_txn] WHERE TRANSACTION_DATE BETWEEN @START_DT AND @END_DT;

INSERT INTO [dbo].[txn_analysis_total_denom_cbi_txn] (
	TRANSACTION_DATE,
    [MONTH],
    FINAL_STATUS,
	[DENOMINATION=0],
	[DENOMINATION=1TO499],
	[DENOMINATION=500T999],
	[DENOMINATION=1000TO2999],
	[DENOMINATION=3000TO4999],
	[DENOMINATION>=5000]
)
SELECT CAST(TRANSACTION_DATE AS DATE) AS TRANSACTION_DATE
,MONTH(TRANSACTION_DATE) AS MONTH
, FINAL_STATUS
, SUM(CASE WHEN COALESCE(TOTAL_DENOMINATION,0) = 0 THEN 1 ELSE 0 END) AS [DENOMINATION=0]
, SUM(CASE WHEN TOTAL_DENOMINATION BETWEEN 1 AND 499 THEN 1 ELSE 0 END) AS [DENOMINATION=1TO499]
, SUM(CASE WHEN TOTAL_DENOMINATION BETWEEN 500 AND 999 THEN 1 ELSE 0 END) AS [DENOMINATION=500T999]
, SUM(CASE WHEN TOTAL_DENOMINATION BETWEEN 1000 AND 2999 THEN 1 ELSE 0 END) AS [DENOMINATION=1000TO2999]
, SUM(CASE WHEN TOTAL_DENOMINATION BETWEEN 3000 AND 4999 THEN 1 ELSE 0 END) AS [DENOMINATION=3000TO4999]
, SUM(CASE WHEN TOTAL_DENOMINATION >= 5000 THEN 1 ELSE 0 END) AS [DENOMINATION>=5000]
FROM TMP_TXN A
LEFT JOIN TMP_CASHBILL1 B
ON A.TRANSACTION_CODE = B.TRANSACTION_CODE 
AND A.TERMINAL_CODE = B.TERMINAL_CODE
GROUP BY MONTH(TRANSACTION_DATE)
, FINAL_STATUS
, CAST(TRANSACTION_DATE AS DATE);

--VOLUME PER TOTAL DENOM RANGE AND FINAL STATUS

DELETE FROM [dbo].[txn_analysis_total_denom_cbi_vol] WHERE TRANSACTION_DATE BETWEEN @START_DT AND @END_DT;

INSERT INTO [dbo].[txn_analysis_total_denom_cbi_vol] (
	TRANSACTION_DATE,
    [MONTH],
    FINAL_STATUS,
	[DENOMINATION=0],
	[DENOMINATION=1TO499],
	[DENOMINATION=500T999],
	[DENOMINATION=1000TO2999],
	[DENOMINATION=3000TO4999],
	[DENOMINATION>=5000]
)
SELECT CAST(TRANSACTION_DATE AS DATE) AS TRANSACTION_DATE
,MONTH(TRANSACTION_DATE) AS MONTH
, FINAL_STATUS
, ISNULL(SUM(CASE WHEN COALESCE(TOTAL_DENOMINATION,0) = 0 THEN TOTAL_DENOMINATION ELSE 0 END) , 0) AS [DENOMINATION=0]
, SUM(CASE WHEN TOTAL_DENOMINATION BETWEEN 1 AND 499 THEN TOTAL_DENOMINATION ELSE 0 END) AS [DENOMINATION=1TO499]
, SUM(CASE WHEN TOTAL_DENOMINATION BETWEEN 500 AND 999 THEN TOTAL_DENOMINATION ELSE 0 END) AS [DENOMINATION=500T999]
, SUM(CASE WHEN TOTAL_DENOMINATION BETWEEN 1000 AND 2999 THEN TOTAL_DENOMINATION ELSE 0 END) AS [DENOMINATION=1000TO2999]
, SUM(CASE WHEN TOTAL_DENOMINATION BETWEEN 3000 AND 4999 THEN TOTAL_DENOMINATION ELSE 0 END) AS [DENOMINATION=3000TO4999]
, SUM(CASE WHEN TOTAL_DENOMINATION >= 5000 THEN TOTAL_DENOMINATION ELSE 0 END) AS [DENOMINATION>=5000]
FROM TMP_TXN A
LEFT JOIN TMP_CASHBILL1 B
ON A.TRANSACTION_CODE = B.TRANSACTION_CODE 
AND A.TERMINAL_CODE = B.TERMINAL_CODE
GROUP BY MONTH(TRANSACTION_DATE)
, FINAL_STATUS
, CAST(TRANSACTION_DATE AS DATE);

--TOTAL_PER CASH BILL - CBI

-- TRANSACTION COUNT TOTAL_PER CASH BILL
DELETE FROM [dbo].[txn_analysis_total_per_cash_bill_cbi_txn] WHERE TRANSACTION_DATE BETWEEN @START_DT AND @END_DT;

INSERT INTO [dbo].[txn_analysis_total_per_cash_bill_cbi_txn] (
	TRANSACTION_DATE,
    [MONTH],
    FINAL_STATUS,
	[P20_DENOM],
	[P50_DENOM],
	[P100_DENOM],
	[P200_DENOM],
	[P500_DENOM],
	[P1000_DENOM]
)
SELECT CAST(TRANSACTION_DATE AS DATE) AS TRANSACTION_DATE
,MONTH(TRANSACTION_DATE) AS MONTH
, FINAL_STATUS
, SUM(P20) AS [P20_DENOM]
, SUM(P50) AS [P50_DENOM]
, SUM(P100) AS [P100_DENOM]
, SUM(P200) AS [P200_DENOM]
, SUM(P500) AS [P500_DENOM]
, SUM(P1000) AS [P1000_DENOM]
FROM TMP_TXN A
LEFT JOIN TMP_CASHBILL1 B
ON A.TRANSACTION_CODE = B.TRANSACTION_CODE
AND A.TERMINAL_CODE = B.TERMINAL_CODE
GROUP BY MONTH(TRANSACTION_DATE)
, FINAL_STATUS
, CAST(TRANSACTION_DATE AS DATE);

-- VOLUME COUNT TOTAL_PER CASH BILL
DELETE FROM [dbo].[txn_analysis_total_per_cash_bill_cbi_vol] WHERE TRANSACTION_DATE BETWEEN @START_DT AND @END_DT;

INSERT INTO [dbo].[txn_analysis_total_per_cash_bill_cbi_vol] (
	TRANSACTION_DATE,
    [MONTH],
    FINAL_STATUS,
	[P20_DENOM],
	[P50_DENOM],
	[P100_DENOM],
	[P200_DENOM],
	[P500_DENOM],
	[P1000_DENOM]
)
SELECT CAST(TRANSACTION_DATE AS DATE) AS TRANSACTION_DATE
,MONTH(TRANSACTION_DATE) AS MONTH
, FINAL_STATUS
, SUM(P20 * 20) AS [P20_DENOM]
, SUM(P50 * 50) AS [P50_DENOM]
, SUM(P100 * 100) AS [P100_DENOM]
, SUM(P200 * 200) AS [P200_DENOM]
, SUM(P500 * 500) AS [P500_DENOM]
, SUM(P1000 * 1000) AS [P1000_DENOM]
FROM TMP_TXN A
LEFT JOIN TMP_CASHBILL1 B
ON A.TRANSACTION_CODE = B.TRANSACTION_CODE
AND A.TERMINAL_CODE = B.TERMINAL_CODE
GROUP BY MONTH(TRANSACTION_DATE)
, FINAL_STATUS
, CAST(TRANSACTION_DATE AS DATE);

END

GO

